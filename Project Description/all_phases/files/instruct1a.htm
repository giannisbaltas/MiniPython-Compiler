<html>
<head>
	<title>Untitled Document</title>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1253">
</head>

<body>

<h3>Εισαγωγή</h3>
<p>Το SableCC  αναλαμβάνει όλα τα στάδια της κατασκευής ενός μεταγλωττιστή, από τη λεκτική ανάλυση μέχρι την παραγωγή των αφηρημένων συντακτικών δέντρων. Από ένα αρχείο γραμματικής παράγει αυτόματα προγράμματα java που πραγματοποιούν αυτά τα καθήκοντα. Το αρχείο της γραμματικής περιλαμβάνει τα εξής τμήματα, κάθε ένα εκ των οποίων είναι προαιρετικό:<br><br>
<code>
	<b>Package</b> &lt;όνομα πακέτου&gt;; // Δήλωση του πακέτου, συνεπώς και φακέλου,όπου θα τοποθετηθούν τα αρχεία java. <br><br>
	<b>Helpers</b>  // Βοηθητικά στοιχεία για τα παρακάτω<br>
	...<br><br>
	<b>States</b> // Δήλωση των καταστάσεων, στις οποίες μπορεί να βρίσκεται το αυτόματο της λεκτικής ανάλυσης<br>
	...<br><br>
	<b>Tokens</b> // Τα κουπόνια (λεκτικές μονάδες) της λεκτικής ανάλυσης<br>
	...<br><br>
	<b>Ignored Tokens</b> // Κουπόνια που αγνοούνται, τυπικά τα σχόλια και τα κενά<br>
	... <br><br>
	<b>Productions</b> // Οι κανόνες της γραμματικής της γλώσσας<br>
	...<br><br>
	<b>Abstract Syntax Tree</b> // Δήλωση του Αφηρημένου Συντακτικού Δένδρου<br>
	...<br><br>
</code></p>

<h3>Λεκτική ανάλυση</h3>
<p>Στα δύο πρώτα κομμάτια, δηλαδή τα Helpers, Tokens στο μεν πρώτο βοηθητικές δηλώνουμε συμβολοσειρές, ώστε να ορίσουμε πιο εύκολα και καθαρά τα κουπόνια, ενώ στο δεύτερο δηλώνουμε τα κουπόνια (λεκτικές μονάδες) της γλώσσας. Και στα δύο τμήματα ισχύει γενικά o εξής κανόνας: <i>αριστερό_μέλος = δεξί_μέλος ;</i> που σημαίνει ότι όπου συναντάται το αριστερό μέλος, θα είναι σαν να βλέπουμε το δεξί.</p>

<p>Για να ορίσουμε το δεξί μέλος έχουμε τις εξής επιλογές:<br>
<ul>
	<li> μία συμβολοσειρά περικλείεται ανάμεσα σε απλά εισαγωγικά, πχ and = '&amp;&amp;';</li>	
	<li> δεν επιτρέπονται escape sequences. αντί για αυτό μπορούμε να γράψουμε τον τακτικό αριθμό του χαρακτήρα που μας ενδιαφέρει, είτε σε δεκαδική είτε σε δεκαεξαδική μορφή. πχ tab = 0x0009;</li>
	<li> ένα σύνολο χαρακτήρων, από το οποίο μπορούμε να επιλέξουμε οποιονδήποτε έναν, περιλαμβάνεται ανάμεσα σε τετράγωνες αγκύλες [,] πχ digit = ['0'..'9'];</li>
	<li> οι δύο τελείες ( .. ) πιο πάνω προφανώς σημαίνουν από ... έως ...</li>
	<li> το | χρησιμοποιείται για να δηλώσει διαζευκτική επιλογή μεταξύ εναλλακτικών πχ wsp = sp | cr | ff| lf|ht;</li>
	<li> το * χρησιμοποιείται για να δηλώσει επανάληψη 0 έως πολλές φορές, πχ white_space = wsp*;</li>
	<li> το + χρησιμοποιείται για επανάληψη από μία έως πολλές πχ number = digit+;</li>
	<li> το ? χρησιμοποιείται για μηδέν ή μια φορά (προαιρετική εμφάνιση)</li>
	<li> όταν έχουμε σύνολα χαρακτήρων μέσα σε [,] το - σημαίνει «εκτός από», πχ not_star = [unicode_input_character - '*'] ;</li>
	<li> όταν έχουμε σύνολα χαρακτήρων μέσα σε [,] το + σημαίνει ένωση των συνόλων,  πχ letter_or_digit = [ letter + digit];</li>
	<li> όταν κάτι γράφεται δίπλα σε κάτι άλλο σημαίνει ότι το ένα πρέπει να ακολουθεί το άλλο επισύναψη των συμβολοσειρών, πχ identifier = letter letter_or_digit*;</li>
	<li> τέλος, δεν υπάρχει κάποιος ειδικός τρόπος να περιγραφούν το σύνολο όλων των χαρακτήρων, έτσι θα χρειάζεται να γράψουμε κάτι σαν: all = [0..0xffff]</li>
</ul>
</p>

<p>Στο τμήμα Ignored Tokens δηλώνονται τα κουπόνια που αγνοούνται, χωρισμένα με κόμματα.</p>

<p>Στο τμήμα States δηλώνονται οι διάφορες καταστάσεις, χωρισμένες με κόμματα. Η πρώτη που θα δηλωθεί θα είναι και η αρχική, κατά τη λεκτική ανάλυση. Αν έχουν δηλωθεί states (καταστάσεις) μπροστά από κάθε κανόνα (ορισμό token) της λεκτικής ανάλυσης, θα πρέπει να δηλωθεί σε ποιες καταστάσεις επιθυμούμε να αναγνωρίζεται αυτό το κουπόνι. Για να το κάνουμε αυτό, θα γράφουμε μέσα σε αγκύλες το όνομα της κατάστασης στην οποία αναγνωρίζεται το token, ενώ αν αναγνωρίζεται σε πολλές, τις γράφουμε όλες χωρισμένες με κόμματα. Επιπλέον, εάν επιθυμούμε να αλλάζουμε κατάσταση όταν βλέπουμε ένα συγκεκριμένο κουπόνι, αυτό θα δηλώνεται γράφοντας ύστερα από την παλιά κατάσταση τους χαρακτήρες -&gt; και το όνομα της νέας κατάστασης. Δηλαδή {κατάσταση1 -&gt; μεταβαίνει1, κατάσταση2-&gt;μεταβαίνει2, ...}<br>
Δύο χαρακτηριστικά παραδείγματα είναι:<br>
  {normal}number = digit+;<br>
  {normal-&gt;comment, comment} comment = '/*';<br>
Το πρώτο είναι προφανές τι σημαίνει. Σχετικά με το δεύτερο, το κουπόνι /*, ονομαζόμενο comment αναγνωρίζεται σε δύο καταστάσεις: στην normal και την comment. Επιπλέον όταν αναγνωριστεί στην normal θα έχουμε μετάβαση στην comment.</p>

</font>
</body>
</html>
